@extends('layouts.admin')
@section('styles')
@endsection

@section('content')



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kalender</title>
    <script src="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"></script>
    <style>
        .calendar {
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        .calendar-header {
            background-color: #4CAF50;
            color: white;
            border-radius: 10px 10px 0 0;
        }
        .calendar-header h2 {
            font-size: 24px;
        }
        .calendar-days {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            padding: 10px;
        }
        .calendar-day {
            text-align: center;
            padding: 10px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .calendar-day:hover {
            background-color: #f0f0f0;
            border-radius: 50%;
        }
        .today {
            background-color: #4CAF50;
            color: white;
            border-radius: 50%;
        }
    </style>
</head>
<body class="bg-gray-100">

<div class="flex justify-center items-center min-h-screen">

    <div class="calendar w-80 p-4">
        <div class="calendar-header text-center py-4 px-2">
            <div class="flex justify-between items-center">
                <button onclick="changeMonth(-1)" class="text-lg text-white">❮</button>
                <h2 id="month-year" class="font-semibold"></h2>
                <button onclick="changeMonth(1)" class="text-lg text-white">❯</button>
            </div>
        </div>
        <div class="calendar-days grid grid-cols-7 gap-2">
            <div class="font-bold text-center text-gray-600">Sun</div>
            <div class="font-bold text-center text-gray-600">Mon</div>
            <div class="font-bold text-center text-gray-600">Tue</div>
            <div class="font-bold text-center text-gray-600">Wed</div>
            <div class="font-bold text-center text-gray-600">Thu</div>
            <div class="font-bold text-center text-gray-600">Fri</div>
            <div class="font-bold text-center text-gray-600">Sat</div>
        </div>
        <div id="days" class="calendar-days grid grid-cols-7 gap-2 mt-2">
            <!-- Days will be generated by JavaScript -->
        </div>
    </div>

</div>

<script>
    const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
    let currentDate = new Date();

    function updateCalendar() {
        const monthYear = document.getElementById("month-year");
        const daysContainer = document.getElementById("days");

        const month = currentDate.getMonth();
        const year = currentDate.getFullYear();

        // Update month and year in the header
        monthYear.innerHTML = `${monthNames[month]} ${year}`;

        // Get first day of the month and number of days in the month
        const firstDayOfMonth = new Date(year, month, 1).getDay();
        const daysInMonth = new Date(year, month + 1, 0).getDate();

        // Clear previous days
        daysContainer.innerHTML = '';

        // Create blank days for the previous month
        for (let i = 0; i < firstDayOfMonth; i++) {
            let blankDay = document.createElement("div");
            blankDay.classList.add("calendar-day");
            daysContainer.appendChild(blankDay);
        }

        // Create actual days of the month
        for (let day = 1; day <= daysInMonth; day++) {
            let dayElement = document.createElement("div");
            dayElement.classList.add("calendar-day");
            dayElement.textContent = day;

            // Highlight today's date
            const today = new Date();
            if (today.getDate() === day && today.getMonth() === month && today.getFullYear() === year) {
                dayElement.classList.add("today");
            }

            daysContainer.appendChild(dayElement);
        }
    }

    function changeMonth(delta) {
        currentDate.setMonth(currentDate.getMonth() + delta);
        updateCalendar();
    }

    // Initialize calendar
    updateCalendar();
</script>

</body>
</html>
